# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    compiler_source_directory: '%env(COMPILER_SOURCE_DIRECTORY)%'
    compiler_target_directory: '%env(COMPILER_TARGET_DIRECTORY)%'
    event_delivery_retry_limit: '%env(int:EVENT_DELIVERY_RETRY_LIMIT)%'
    job_timeout_check_period_ms: '%env(JOB_TIMEOUT_CHECK_PERIOD_MS)%'
    job_completed_check_period_ms: '%env(JOB_COMPLETED_CHECK_PERIOD_MS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Model/'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Services\SourceFileStore:
        arguments:
            $path: '%compiler_source_directory%'

    webignition\TcpCliProxyClient\HandlerFactory:
        class: webignition\TcpCliProxyClient\HandlerFactory

    app.services.compiler-client:
        class: webignition\TcpCliProxyClient\Client
        factory: [ 'webignition\TcpCliProxyClient\Client', 'createFromHostAndPort' ]
        arguments:
            $host: '%env(COMPILER_HOST)%'
            $port: '%env(COMPILER_PORT)%'

    app.services.delegator-client:
        class: webignition\TcpCliProxyClient\Client
        factory: [ 'webignition\TcpCliProxyClient\Client', 'createFromHostAndPort' ]
        arguments:
            $host: '%env(DELEGATOR_HOST)%'
            $port: '%env(DELEGATOR_PORT)%'

    App\Services\TestExecutor:
        arguments:
            $delegatorClient: '@app.services.delegator-client'
            $compilerTargetDirectory: '%compiler_target_directory%'

    Symfony\Component\Yaml\Parser:
        class: Symfony\Component\Yaml\Parser

    App\Services\Compiler:
        arguments:
            $client: '@app.services.compiler-client'
            $compilerSourceDirectory: '%env(COMPILER_SOURCE_DIRECTORY)%'
            $compilerTargetDirectory: '%env(COMPILER_TARGET_DIRECTORY)%'

    Psr\Http\Client\ClientInterface:
        class: GuzzleHttp\Client

#    App\Services\WorkerEventFactory\EventHandler\:
#        resource: '../src/Services/WorkerEventFactory/EventHandler/'
#        tags: ['app.worker_event_factory.event_handler']
#
#    App\MessageDispatcher\DeliverEventMessageDispatcher:
#        arguments:
#            $handlers: !tagged_iterator app.worker_event_factory.event_handler

    webignition\YamlDocumentGenerator\YamlGenerator:
        class: webignition\YamlDocumentGenerator\YamlGenerator

    Symfony\Component\Yaml\Dumper: ~

    app.message_dispatcher.delayed.job_completed_check:
        class: App\MessageDispatcher\DelayedMessageDispatcher
        arguments:
            $message: '@App\Message\JobCompletedCheckMessage'
            $delayInMilliseconds: '%job_completed_check_period_ms%'

    app.message_dispatcher.delayed.job_timeout_check:
        class: App\MessageDispatcher\DelayedMessageDispatcher
        arguments:
            $message: '@App\Message\TimeoutCheckMessage'
            $delayInMilliseconds: '%job_timeout_check_period_ms%'

    App\EventDispatcher\JobCompleteEventDispatcher:
        arguments:
            $jobCompletedCheckMessageDispatcher: '@app.message_dispatcher.delayed.job_completed_check'

    App\MessageHandler\TimeoutCheckHandler:
        arguments:
            $timeoutCheckMessageDispatcher: '@app.message_dispatcher.delayed.job_timeout_check'

    app.messenger.retry_strategy.deliver_event.multiplier:
        class: Symfony\Component\Messenger\Retry\MultiplierRetryStrategy
        arguments:
            $maxRetries: '%event_delivery_retry_limit%'
            $delayMilliseconds: 1000
            $multiplier: 2
            $maxDelayMilliseconds: 0

    App\Messenger\DeliverEventMessageRetryStrategy:
        arguments:
            $multiplierRetryStrategy: '@app.messenger.retry_strategy.deliver_event.multiplier'

    webignition\YamlDocumentSetParser\Parser: ~

    SmartAssert\YamlFile\FileHashes\Deserializer: ~

    SmartAssert\YamlFile\Collection\Deserializer: ~

    webignition\YamlDocument\Factory: ~

    webignition\BasilCompilerModels\Factory\ErrorOutputFactory: ~

    webignition\BasilCompilerModels\Factory\TestManifestFactory: ~

    webignition\BasilCompilerModels\Factory\TestManifestFactoryInterface:
        class: App\Services\TestManifestFactory
        arguments:
            $baseTestManifestFactory: '@webignition\BasilCompilerModels\Factory\TestManifestFactory'
            $compilerSourceDirectory: '%compiler_source_directory%'
            $compilerTargetDirectory: '%compiler_target_directory%'

    webignition\BasilCompilerModels\Factory\TestManifestCollectionFactory: ~

    GuzzleHttp\Psr7\HttpFactory: ~

    Psr\Http\Message\RequestFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    Psr\Http\Message\StreamFactoryInterface:
        alias: GuzzleHttp\Psr7\HttpFactory

    App\Services\SourceCompilationFailedEventFactory:
        arguments:
            $compilerSourceDirectory: '%compiler_source_directory%'

    App\Message\JobCompletedCheckMessage: ~
    App\Message\TimeoutCheckMessage: ~

    App\Services\ApplicationWorkflowHandler:
        arguments:
            $timeoutCheckMessageDispatcher: '@app.message_dispatcher.delayed.job_timeout_check'
