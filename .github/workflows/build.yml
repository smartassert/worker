name: Build

on:
  push:
    branches:
      - master
  release:
    types:
      - published
  pull_request:
    branches:
      - master

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set image tag name
        id: version
        env:
          RELEASE_TAG_NAME: ${{ github.event.release.tag_name }}
        run: |
          [[ ! -z "$RELEASE_TAG_NAME" ]] && echo "::set-output name=value::$RELEASE_TAG_NAME" || echo "::set-output name=value::master"

      - name: Output image versions
        run: cat image-versions.env

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Container Repository
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/smartassert/worker:${{ needs.setup.outputs.version }}

  trigger-deploy:
    name: Trigger deploy
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ needs.setup.outputs.version != 'master' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Trigger deploy workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          token: ${{ secrets.PAT_TOKEN_SELF }}
          inputs: |
            {
              "version": "${{ needs.setup.outputs.version }}"
            }
