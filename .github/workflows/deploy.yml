name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to deploy
        required: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      worker-version: ${{ github.event.inputs.version }}
      compiler-version: ${{ steps.image-versions.outputs.COMPILER_VERSION }}
      chrome-runner-version: ${{ steps.image-versions.outputs.CHROME_RUNNER_VERSION }}
      firefox-runner-version: ${{ steps.image-versions.outputs.FIREFOX_RUNNER_VERSION }}
      delegator-version: ${{ steps.image-versions.outputs.DELEGATOR_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.version }}

      - name: Checkout bash-read-env-file
        uses: actions/checkout@v2
        with:
          repository: smartassert/bash-read-env-file
          path: ./vendor/smartassert/bash-read-env-file
          ref: main

      - name: Read image versions
        id: image-versions
        env:
          ENV_FILE_PATH: ./image-versions.env
        run: ./vendor/smartassert/bash-read-env-file/src/read-env-file-ga.sh

  verify-setup:
    name: Verify setup
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Worker version
        env:
          VALUE: ${{ needs.setup.outputs.worker-version }}
        run: '[ "" != "$VALUE" ] && echo "$VALUE"'

      - name: Compiler version
        env:
          VALUE: ${{ needs.setup.outputs.compiler-version }}
        run: '[ "" != "$VALUE" ] && echo "$VALUE"'

      - name: Chrome runner version
        env:
          VALUE: ${{ needs.setup.outputs.chrome-runner-version }}
        run: '[ "" != "$VALUE" ] && echo "$VALUE"'

      - name: Firefox runner version
        env:
          VALUE: ${{ needs.setup.outputs.firefox-runner-version }}
        run: '[ "" != "$VALUE" ] && echo "$VALUE"'

      - name: Delegator version
        env:
          VALUE: ${{ needs.setup.outputs.delegator-version }}
        run: '[ "" != "$VALUE" ] && echo "$VALUE"'

  dispatch-worker-release-event:
    name: Dispatch worker release event
    runs-on: ubuntu-latest
    needs: [setup, verify-setup]

    steps:
      - name: Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.WORKER_DEPLOY_TOKEN }}
          repository: smartassert/worker-deploy
          event-type: worker-release
          client-payload: |
            {
              "worker_version": "${{ needs.setup.outputs.worker-version }}",
              "compiler_version": "${{ needs.setup.outputs.compiler-version }}",
              "chrome_runner_version": "${{ needs.setup.outputs.chrome-runner-version }}",
              "firefox_runner_version": "${{ needs.setup.outputs.firefox-runner-version }}",
              "delegator_version": "${{ needs.setup.outputs.delegator-version }}"
            }
